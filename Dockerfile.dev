### STAGE 1: Build ###
# We label our stage as ‘builder’
FROM node:16-alpine as builder
COPY package.json package-lock.json ./
COPY .npmrc ./
## Storing node modules on a separate layer will prevent unnecessary npm installs at each build
RUN npm install -g npm@8.2.0
RUN npm ci && mkdir /ng-app && mv ./node_modules ./ng-app
WORKDIR /ng-app
COPY . .
## Populate environment variables
## Build the angular app in production mode and store the artifacts in dist folder

RUN npm run ng build -- --configuration development
### STAGE 2: Setup ###
FROM nginx
## Copy our default nginx config
COPY nginx/default.conf /etc/nginx/conf.d/
## Remove default nginx website
RUN rm -rf /usr/share/nginx/html/*
## From ‘builder’ stage copy over the artifacts in dist folder to default nginx public folder
COPY --from=builder /ng-app/www /usr/share/nginx/html

EXPOSE 4200 80 8080

ENTRYPOINT ["nginx", "-g", "daemon off;"]